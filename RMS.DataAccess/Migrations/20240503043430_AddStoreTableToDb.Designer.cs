// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMS.DataAccess.Data;

#nullable disable

namespace RMS.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240503043430_AddStoreTableToDb")]
    partial class AddStoreTableToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RMS.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountInStock")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountInStock = 100,
                            Description = "Dummy Product 1",
                            Group = "Group A",
                            Number = "P001",
                            Type = "Type X",
                            UOM = "Unit"
                        },
                        new
                        {
                            Id = 2,
                            AmountInStock = 150,
                            Description = "Dummy Product 2",
                            Group = "Group B",
                            Number = "P002",
                            Type = "Type Y",
                            UOM = "Unit"
                        },
                        new
                        {
                            Id = 3,
                            AmountInStock = 200,
                            Description = "Dummy Product 3",
                            Group = "Group C",
                            Number = "P003",
                            Type = "Type Z",
                            UOM = "Unit"
                        });
                });

            modelBuilder.Entity("RMS.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Medical Shop 1",
                            Name = "Store1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Medical Shop 2",
                            Name = "Store2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Medical Shop 3",
                            Name = "Store3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
